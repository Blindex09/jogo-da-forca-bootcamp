package com.bootcamp.forca;

import org.junit.platform.suite.api.SelectPackages;
import org.junit.platform.suite.api.Suite;
import org.junit.platform.suite.api.SuiteDisplayName;

/**
 * Su√≠te de testes completa para o Jogo da Forca.
 * Executa todos os testes do sistema de forma organizada.
 */
@Suite
@SuiteDisplayName("üéÆ Jogo da Forca - Su√≠te Completa de Testes")
@SelectPackages({
    "com.bootcamp.forca.model",
    "com.bootcamp.forca.controller", 
    "com.bootcamp.forca"
})
public class AllTestsSuite {
    
    // Esta classe serve apenas para agrupar todos os testes
    // A execu√ß√£o √© feita pela anota√ß√£o @Suite
    
    /*
     * COBERTURA DE TESTES:
     * 
     * üì¶ MODEL PACKAGE:
     * ‚úÖ PalavraTest (12 testes)
     *    - Cria√ß√£o e inicializa√ß√£o
     *    - Tentativas de letras corretas/incorretas  
     *    - Convers√£o mai√∫scula/min√∫scula
     *    - Palavra parcial e completa
     *    - Controle de letras j√° tentadas
     *    - Casos especiais (palavra √∫nica, letras repetidas)
     * 
     * ‚úÖ ForcaTest (10 testes)
     *    - Inicializa√ß√£o sem erros
     *    - Adi√ß√£o de erros e controle de limite
     *    - Detec√ß√£o de derrota
     *    - Desenhos ASCII din√¢micos
     *    - Reinicializa√ß√£o
     *    - C√°lculo de tentativas restantes
     * 
     * ‚úÖ BancoPalavrasTest (13 testes)
     *    - Inicializa√ß√£o com categorias corretas
     *    - Verifica√ß√£o de exist√™ncia de categorias
     *    - Obten√ß√£o de palavras aleat√≥rias
     *    - Valida√ß√£o de palavras (mai√∫sculas, sem caracteres especiais)
     *    - Case insensitive para categorias
     *    - M√∫ltiplas inst√¢ncias independentes
     * 
     * üì¶ CONTROLLER PACKAGE:
     * ‚úÖ JogoDaForcaTest (10 testes)
     *    - Inicializa√ß√£o correta do jogo
     *    - Integra√ß√£o com banco de palavras
     *    - Estado inicial consistente
     *    - Funcionalidades do banco de palavras
     *    - M√∫ltiplas inst√¢ncias independentes
     * 
     * üì¶ INTEGRATION TESTS:
     * ‚úÖ IntegrationTest (7 testes)
     *    - Simula√ß√£o de jogo completo com vit√≥ria
     *    - Simula√ß√£o de jogo completo com derrota
     *    - Jogo misto com vit√≥ria de √∫ltima hora
     *    - Valida√ß√£o de integra√ß√£o completa
     *    - Comportamento com palavras de tamanhos diferentes
     *    - Sistema de reinicializa√ß√£o
     *    - Robustez geral do sistema
     * 
     * TOTAL: 62 TESTES AUTOMATIZADOS
     * 
     * EXECUTAR TESTES:
     * - gradle test
     * - gradle test --info (com detalhes)
     * - gradle test --continue (continua mesmo com falhas)
     */
}